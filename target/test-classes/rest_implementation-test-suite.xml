<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:assert-object-equals="http://www.mulesoft.org/schema/mule/assert-object-equals" xmlns:mock="http://www.mulesoft.org/schema/mule/mock" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/mock http://www.mulesoft.org/schema/mule/mock/current/mule-mock.xsd
http://www.mulesoft.org/schema/mule/assert-object-equals http://www.mulesoft.org/schema/mule/assert-object-equals/current/mule-assert-object-equals.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
    <munit:config name="munit" doc:name="MUnit configuration" mock-connectors="false" mock-inbounds="false"/>
    <spring:beans>
        <spring:import resource="classpath:rest-sys-api.xml"/>
        <spring:import resource="classpath:common-errors.xml"/>
    </spring:beans>
    <http:request-config name="HTTP_Request_Configuration" host="localhost" port="8082" basePath="api" doc:name="HTTP Request Configuration"/>
   
    <munit:test name="rest_implementation-test-suite-rest_implementationFlowTest" description="Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Web Service Consumer : consuming soap service']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[getResource('wsactresponse.xml').asString()]" mimeType="application/xml"/>
        </mock:when>
        <munit:set payload="#[]" doc:name="Set Message">
            <munit:inbound-properties>
                <munit:inbound-property key="search_type" value="'A'"/>
                <munit:inbound-property key="search_no" value="3000074110"/>
                <munit:inbound-property key="agent" value="151134"/>
                <munit:inbound-property key="lst_record" value="1234"/>
            </munit:inbound-properties>
        </munit:set>
        <flow-ref name="rest-sys-api-implementation" doc:name="Flow Reference"/>
        <logger message="#[payload]" level="INFO" doc:name="Logger456"/>
        <assert-object-equals:compare-objects expected-ref="#[getResource('wsactjsonresponse.json').asStream()]" doc:name="Assert Object Equals"/>
    </munit:test>
    <munit:test name="rest_implementation-fail-test-suiteTest" description="MUnit Test">
        <mock:when messageProcessor=".*:.*" doc:name="Mock">
            <mock:with-attributes>
                <mock:with-attribute name="doc:name" whereValue="#['Web Service Consumer : consuming soap service']"/>
            </mock:with-attributes>
            <mock:then-return payload="#[getResource('error_wsactresponse.xml').asString()]" mimeType="application/xml"/>
        </mock:when>
        <munit:set payload="#[]" doc:name="Set Message">
            <munit:invocation-properties>
                <munit:invocation-property key="search_type" value="'A'"/>
                <munit:invocation-property key="search_no" value="183189"/>
                <munit:invocation-property key="agent" value="1213"/>
                <munit:invocation-property key="lst_record" value="123"/>
            </munit:invocation-properties>
        </munit:set>
        <flow-ref name="rest-sys-api-implementation" doc:name="Flow Reference"/>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
        <assert-object-equals:compare-objects expected-ref="#[getResource('transformation_error_response_payload.json').asStream()]" doc:name="Assert Object Equals"/>
    </munit:test>
</mule>
